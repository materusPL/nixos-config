# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "sd_mod" "rtsx_usb_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    {
      device = "/dev/disk/by-label/NixOS_Root_Laptop";
      fsType = "btrfs";
      options = [ "subvol=@" "noatime" "ssd" "space_cache=v2" "compress=zstd" ];
    };
  fileSystems."/nix" =
    {
      device = "/dev/disk/by-label/NixOS_Root_Laptop";
      fsType = "btrfs";
      options = [ "subvol=@nix" "noatime" "compress=zstd" "ssd" "space_cache=v2" ];
    };
    fileSystems."/data" =
    {
      device = "/dev/disk/by-label/HDD_DATA";
      fsType = "btrfs";
      options = [ "noatime" "compress=zstd" "nossd" "autodefrag" ];
    };
  fileSystems."/boot" =
    {
      device = "/dev/disk/by-label/NixOS_Root_Laptop";
      fsType = "btrfs";
      options = [ "subvol=@boot" "ssd" ];
    };

  fileSystems."/boot/efi" =
    {
      device = "/dev/disk/by-label/NixOS_EFI_L";
      fsType = "vfat";
    };


  fileSystems."/etc/nixos" =
    {
      device = "/materus/config/nixos-config";
      fsType = "none";
      options = [ "bind" ];
    };

  swapDevices = [{
    device = "/data/.swapfile";
    size = 32 * 1024;
  }];

  zramSwap = {
    enable = true;
    memoryPercent = 50;
  };


  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
